--- tcng-10b.orig/Makefile
+++ tcng-10b/Makefile
@@ -333,22 +333,22 @@
 install-tcng:		tcc check-install-dir scripts/localize.sh
 			ln -sf scripts/localize.sh .
 			tar cfh - $(TCC_BINDIST) | \
-			  (cd $(INSTALL_DIR) && tar xf -)
-			cd $(INSTALL_DIR) && ./localize.sh
-			rm -f localize.sh $(INSTALL_DIR)/localize.sh
+			  (cd $(DESTDIR)$(INSTALL_DIR) && tar xf -)
+			cd $(DESTDIR)$(INSTALL_DIR) && ./localize.sh $(DESTDIR)
+			rm -f localize.sh $(DESTDIR)$(INSTALL_DIR)/localize.sh
 
 install-tcsim:		tcsim check-install-dir scripts/localize.sh
 			ln -sf scripts/localize.sh .
-			tar --ignore-failed-read -chf - $(TCSIM_BINDIST) | \
-			  (cd $(INSTALL_DIR) && tar xf -)
-			cd $(INSTALL_DIR) && ./localize.sh
-			rm -f localize.sh $(INSTALL_DIR)/localize.sh
+			tar --ignore-failed-read cfh - $(TCSIM_BINDIST) | \
+			  (cd $(DESTDIR)$(INSTALL_DIR) && tar xf -)
+			cd $(DESTDIR)$(INSTALL_DIR) && ./localize.sh $(DESTDIR)
+			rm -f localize.sh $(DESTDIR)$(INSTALL_DIR)/localize.sh
 
 install-tests:		tcsim check-install-dir
-			mkdir -p $(INSTALL_DIR)/lib/tcng/tests
+			mkdir -p $(DESTDIR)$(INSTALL_DIR)/lib/tcng/tests
 			ln -sf scripts/run-all-tests .
 			tar cfh - $(TCNG_TESTS_BINDIST) | \
-			  (cd $(INSTALL_DIR)/lib/tcng/tests && tar xf -)
+			  (cd $(DESTDIR)$(INSTALL_DIR)/lib/tcng/tests && tar xf -)
 			rm -f run-all-tests
 
 install:
@@ -360,26 +360,26 @@
 # ----- uninstall -------------------------------------------------------------
 
 uninstall-tcc uninstall-tcng:
-			scripts/uninstall.sh $(INSTALL_DIR) $(TCC_BINDIST)
-			rm -f $(INSTALL_DIR)/bin/tcc.bin
-			rm -f $(INSTALL_DIR)/bin/tcng
+			scripts/uninstall.sh $(DESTDIR)$(INSTALL_DIR) $(TCC_BINDIST)
+			rm -f $(DESTDIR)$(INSTALL_DIR)/bin/tcc.bin
+			rm -f $(DESTDIR)$(INSTALL_DIR)/bin/tcng
 
 uninstall-tcsim:
-			scripts/uninstall.sh $(INSTALL_DIR) $(TCSIM_BINDIST)
-			-rmdir $(INSTALL_DIR)/lib/tcng/include/ulib
-			-rmdir $(INSTALL_DIR)/lib/tcng/include
-			rm -f $(INSTALL_DIR)/bin/tcsim.bin
+			scripts/uninstall.sh $(DESTDIR)$(INSTALL_DIR) $(TCSIM_BINDIST)
+			-rmdir $(DESTDIR)$(INSTALL_DIR)/lib/tcng/include/ulib
+			-rmdir $(DESTDIR)$(INSTALL_DIR)/lib/tcng/include
+			rm -f $(DESTDIR)$(INSTALL_DIR)/bin/tcsim.bin
 			
 uninstall-tests:
-			scripts/uninstall.sh $(INSTALL_DIR)/lib/tcng/tests \
+			scripts/uninstall.sh $(DESTDIR)$(INSTALL_DIR)/lib/tcng/tests \
 			  $(TCNG_TESTS_BINDIST)
-			-rmdir $(INSTALL_DIR)/lib/tcng/tests/tcsim
-			-rmdir $(INSTALL_DIR)/lib/tcng/tests
+			-rmdir $(DESTDIR)$(INSTALL_DIR)/lib/tcng/tests/tcsim
+			-rmdir $(DESTDIR)$(INSTALL_DIR)/lib/tcng/tests
 
 uninstall:		uninstall-tcng uninstall-tcsim
-			[ ! -d $(INSTALL_DIR)/lib/tcng/tests ] || \
+			[ ! -d $(DESTDIR)$(INSTALL_DIR)/lib/tcng/tests ] || \
 			  $(MAKE) uninstall-tests
-			-rmdir $(INSTALL_DIR)/lib/tcng
+			-rmdir $(DESTDIR)$(INSTALL_DIR)/lib/tcng
 
 # ----- RPMs ------------------------------------------------------------------
 
--- tcng-10b.orig/configure
+++ tcng-10b/configure
@@ -1,4 +1,4 @@
-#!/bin/sh -e
+#!/bin/bash -e
 #
 # configure - Configure directories and system environment for tcc and tcsim
 #
@@ -29,6 +29,7 @@
 kdir=
 idir=
 install_dir=
+data_dir=
 with_tcsim=
 with_manual=
 bytesex=
@@ -44,6 +45,7 @@
 	kdir=$KSRC
 	idir=$ISRC
 	install_dir=$INSTALL_DIR
+	data_dir=$DATA_DIR
 	with_tcsim=$TCSIM
 	with_manual=$BUILD_MANUAL
 	bytesex=$BYTEORDER
@@ -57,7 +59,7 @@
 
 topdir=`pwd`
 [ -z "$idir" -o ! -d "$idir" ] && \
-  idir="`find tcsim -name 'iproute2*' -type d -maxdepth 1 | sed 1q`"
+  idir="`find tcsim -maxdepth 1 -type d -name 'iproute2*' | sed 1q`"
 [ -z "$with_tcsim" ] && with_tcsim=true
 [ -z "$with_manual" ] && with_manual=true
 tcc=
@@ -77,11 +79,13 @@
     cat <<EOF 1>&2
 usage: $0 [--no-defaults] [--kernel <dir_or_tar.bz2>]
                  [--iproute2 <dir_or_tar.gz>] [--tcng <path>]
-                 [--install-directory <dir>] [--no-tcsim|--with-tcsim]
-                 [--no-manual|--with-manual] [--big-endian|--little-endian]
-		 [--action|--conform-exceed] [--yacc <command>] [-$|--c99]
+                 [--install-directory <dir>] [--data-directory <dir>]
+                 [--no-tcsim|--with-tcsim] [--no-manual|--with-manual]
+                 [--big-endian|--little-endian] [--action|--conform-exceed]
+                 [--yacc <command>] [-$|--c99]
   abbreviations: -k for --kernel, -i for --iproute2,
                  -t for --tcng, -d for --install-directory,
+                 -D for --data-directory,
                  -n for --no-tcsim, -N for --with-tcsim,
                  -m for --no-manual, -M for --with-manual,
                  -b for --big-endian, -l for --little-endian,
@@ -110,6 +114,10 @@
 	    [ ! -z "$2" ] || usage
 	    install_dir="$2"
 	    shift;;
+	-D|--data-directory)
+	    [ ! -z "$2" ] || usage
+	    data_dir="$2"
+	    shift;;
 	-n|--no-tcsim)
 	    with_tcsim=false;;
 	-N|--with-tcsim)
@@ -414,6 +422,7 @@
 BUILD_MANUAL=$with_manual
 NO_TESTS="$no_tests"
 INSTALL_DIR=$install_dir
+DATA_DIR=${data_dir:-$topdir}
 YACC="$yacc"
 DOLLAR=$dollar
 ACTION=$action
--- tcng-10b.orig/build/tcng.ebuild
+++ tcng-10b/build/tcng.ebuild
@@ -44,7 +44,7 @@
         dodir /usr/bin
  
         ./configure --no-tcsim \
-                --install-directory ${D}usr
+                --install-directory ${D}usr --data-directory ${D}usr/lib/tcng
         emake || die
  
 #       echo
--- tcng-10b.orig/tcc/Makefile
+++ tcng-10b/tcc/Makefile
@@ -40,6 +40,7 @@
 
 CFLAGS_CONFIG=-DVERSION=\"`cat ../VERSION`\" \
   $(shell sed '/TOPDIR=\(.*\)/s//-DTOPDIR=\\\"\1\\\"/p;d' <../config) \
+  $(shell sed '/DATA_DIR=\(.*\)/s//-DDATA_DIR=\\\"\1\\\"/p;d' <../config) \
   $(shell sed '/DOLLAR=true/s//-DDOLLAR/p;d' <../config) \
   $(shell sed '/ACTION=false/s//-DCONFIRM_EXCEED/p;d' <../config)
 CFLAGS=$(CC_OPTS) $(CFLAGS_WARN) -I../shared $(CFLAGS_CONFIG)
--- tcng-10b.orig/tcc/tcc.c
+++ tcng-10b/tcc/tcc.c
@@ -227,7 +227,7 @@
 #endif
     tcng_topdir = getenv("TCNG_TOPDIR");
     include = alloc_sprintf("%s/" TCNG_INC_DIR,
-      tcng_topdir ? tcng_topdir : TOPDIR);
+      tcng_topdir ? tcng_topdir : DATA_DIR);
     cpp_argv[cpp_argc++] = alloc_sprintf("-I%s",include); /* @@@ leak */
     /*
      * Reserved options (strong Unix tradition):
--- tcng-10b.orig/tcc/tcng.y
+++ tcng-10b/tcc/tcng.y
@@ -268,7 +268,7 @@
 %token		TOK_PRAGMA
 %token		TOK_PASS TOK_RECLASSIFY TOK_CONTINUE TOK_FIELD TOK_TAG
 %token		TOK_FIELD_ROOT
-%token		TOK_CONFORM TOK_COUNT TOK_PRECOND TOK_DROP TOK_IF_ANCHOR
+%token		TOK_CONFORM TOK_COUNT TOK_PRECOND TOK_DROP
 %token		TOK_CBQ TOK_DSMARK TOK_FIFO TOK_GRED TOK_HTB TOK_PRIO TOK_RED
 %token		TOK_SFQ TOK_TBF
 %token		TOK_INGRESS TOK_EGRESS
@@ -625,15 +625,15 @@
 qdisc_expression:
     TOK_QDISC variable_expression
 	{
-	    $$ = data_convert($2,dt_qdisc);
-	    if ($$.u.qdisc->parent.device != parent.device)
+	    $<data>$ = data_convert($2,dt_qdisc);
+	    if ($<data>$.u.qdisc->parent.device != parent.device)
 		yyerror("qdisc was created in different scope");
 	    $<parent>1 = parent; /* a little hackish ... @@@ */
-	    parent.qdisc = $$.u.qdisc;
+	    parent.qdisc = $<data>$.u.qdisc;
 	    parent.class = NULL;
 	    parent.filter = NULL;
 	    parent.tunnel = NULL;
-	    begin_scope($$);
+	    begin_scope($<data>$);
 	}
       opt_qdisc_or_class_body
 	{
@@ -650,15 +650,15 @@
 class_expression:
     TOK_CLASS variable_expression
 	{
-	    $$ = data_convert($2,dt_class);
-	    if ($$.u.class->parent.qdisc != parent.qdisc ||
-	      $$.u.class->parent.class != parent.class)
+	    $<data>$ = data_convert($2,dt_class);
+	    if ($<data>$.u.class->parent.qdisc != parent.qdisc ||
+	      $<data>$.u.class->parent.class != parent.class)
 		yyerror("class was created in different scope");
-	    $$.u.class->parent = parent;
+	    $<data>$.u.class->parent = parent;
 		/* okay to change it a little - the fields we may modify are
 		   only used temporarily during construction anyway */
-	    parent.class = $$.u.class;
-	    begin_scope($$);
+	    parent.class = $<data>$.u.class;
+	    begin_scope($<data>$);
 	}
       opt_selectors opt_qdisc_or_class_body
 	{
@@ -696,13 +696,13 @@
 filter_expression:
     TOK_FILTER variable_expression
 	{
-	    $$ = data_convert($2,dt_filter);
-	    if ($$.u.filter->parent.qdisc != parent.qdisc)
+	    $<data>$ = data_convert($2,dt_filter);
+	    if ($<data>$.u.filter->parent.qdisc != parent.qdisc)
 		yyerror("filter was created in different scope");
-	    $$.u.filter->parent.filter = parent.filter;
-	    parent.filter = $$.u.filter;
+	    $<data>$.u.filter->parent.filter = parent.filter;
+	    parent.filter = $<data>$.u.filter;
 	    /* we don't dare to touch any other fields of parent */
-	    begin_scope($$);
+	    begin_scope($<data>$);
 	}
       opt_filter_body
 	{
@@ -1312,34 +1312,34 @@
     qdisc_name
 	{
 	    if (!parent.device) yyerror("qdisc without device");
-	    $$ = alloc_t(QDISC);
-	    $$->parent = parent;
-	    $$->dsc = $1;
-	    $$->number = UNDEF_U32;
-	    $$->location = current_location();
-	    $$->classes = NULL;
-	    $$->filters = NULL;
-	    $$->if_expr = data_none();
-	    parent.qdisc = $$;
+	    $<qdisc>$ = alloc_t(QDISC);
+	    $<qdisc>$->parent = parent;
+	    $<qdisc>$->dsc = $1;
+	    $<qdisc>$->number = UNDEF_U32;
+	    $<qdisc>$->location = current_location();
+	    $<qdisc>$->classes = NULL;
+	    $<qdisc>$->filters = NULL;
+	    $<qdisc>$->if_expr = data_none();
+	    parent.qdisc = $<qdisc>$;
 	    parent.class = NULL;
 	    parent.filter = NULL;
 	    param_def = $1->qdisc_param;
-	    number_anchor = $1 != &ingress_dsc ? &$$->number : NULL;
-	    tag_anchor = &$$->location.tag;
-	    begin_scope(data_qdisc($$));
+	    number_anchor = $1 != &ingress_dsc ? &$<qdisc>$->number : NULL;
+	    tag_anchor = &$<qdisc>$->location.tag;
+	    begin_scope(data_qdisc($<qdisc>$));
 	}
       opt_parameters
 	{
-	    $$ = $<qdisc>2;
-	    $$->params = $3;
-	    check_required($3,$$->dsc->qdisc_param->required,
+	    $<qdisc>$ = $<qdisc>2;
+	    $<qdisc>$->params = $3;
+	    check_required($3,$<qdisc>$->dsc->qdisc_param->required,
 	      current_location());
 	}
       opt_qdisc_or_class_body
 	{
 	    /* end_scope is called in opt_qdisc_or_class_body */
-	    $$ = $<qdisc>2;
-	    parent = $$->parent;
+	    $<qdisc>$ = $<qdisc>2;
+	    parent = $<qdisc>$->parent;
 	}
     ;
 
@@ -1879,7 +1879,7 @@
 	}
     | variable
 	{
-	    $$ = data_list_element(var_forward());
+	    $<list>$ = data_list_element(var_forward());
 	}
 	  forward_class_list
 	{
@@ -1918,7 +1918,7 @@
 class_spec:
     TOK_CLASS
 	{
-	    $$ = begin_class(0);
+	    $<class>$ = begin_class(0);
 	}
       opt_parameters opt_selectors opt_qdisc_or_class_body
 	{
@@ -2062,7 +2062,7 @@
 filter_spec:
     filter_name
 	{
-	    $$ = begin_filter($1);
+	    $<filter>$ = begin_filter($1);
 	}
 	  opt_parameters opt_filter_body
 	{
@@ -2074,7 +2074,7 @@
 short_filter_spec:
     filter_name
 	{
-	    $$ = begin_filter($1);
+	    $<filter>$ = begin_filter($1);
 	}
 	  opt_parameters
 	{
@@ -2200,46 +2200,46 @@
 police_spec:
     TOK_POLICE
 	{
-	    $$ = alloc_t(POLICE);
-	    $$->number = UNDEF_U32;
-	    $$->location = current_location();
-	    number_anchor = &$$->number;
-	    tag_anchor = &$$->location.tag;
+	    $<police>$ = alloc_t(POLICE);
+	    $<police>$->number = UNDEF_U32;
+	    $<police>$->location = current_location();
+	    number_anchor = &$<police>$->number;
+	    tag_anchor = &$<police>$->location.tag;
 	    param_def = &police_def;
 	}
       parameters
 	{
-	    $$ = $<police>2;
-	    $$->params = $3;
+	    $<police>$ = $<police>2;
+	    $<police>$->params = $3;
 	    check_required($3,police_def.required,current_location());
 	}
       opt_policing_decision opt_else
 	{
-	    $$ = $<police>2;
-	    $$->out_profile = $5;
-	    $$->in_profile = $6;
-	    add_police($$);
+	    $<police>$ = $<police>2;
+	    $<police>$->out_profile = $5;
+	    $<police>$->in_profile = $6;
+	    add_police($<police>$);
 	}
     ;
 
 bucket_spec:
     TOK_BUCKET
 	{
-	    $$ = alloc_t(POLICE);
-	    $$->number = UNDEF_U32;
-	    $$->location = current_location();
-	    number_anchor = &$$->number;
-	    tag_anchor = &$$->location.tag;
+	    $<police>$ = alloc_t(POLICE);
+	    $<police>$->number = UNDEF_U32;
+	    $<police>$->location = current_location();
+	    number_anchor = &$<police>$->number;
+	    tag_anchor = &$<police>$->location.tag;
 	    param_def = &bucket_def;
 	}
       parameters
 	{
-	    $$ = $<police>2;
-	    $$->params = $3;
+	    $<police>$ = $<police>2;
+	    $<police>$->params = $3;
 	    check_required($3,bucket_def.required,current_location());
-	    $$->out_profile = pd_reclassify;
-	    $$->in_profile = pd_ok; 
-	    add_police($$);
+	    $<police>$->out_profile = pd_reclassify;
+	    $<police>$->in_profile = pd_ok; 
+	    add_police($<police>$);
 	}
     ;
 
--- tcng-10b.orig/tcc/config.h
+++ tcng-10b/tcc/config.h
@@ -18,8 +18,8 @@
 #define DEV_NULL	"/dev/null"  /* dummy file system object */
 #define MAX_COMMENT	1024	/* maximum comment line(s) in tc output */
 #define TCC_MODULE_CMD	"tcc-module"
-#define TCNG_BIN_DIR	"lib/tcng/bin"
-#define TCNG_INC_DIR	"lib/tcng/include"
+#define TCNG_BIN_DIR	"bin"
+#define TCNG_INC_DIR	"include"
 #define MAX_DEBUG_DEPTH	100	/* stack depth for debugf; okay to guess */
 #define MAX_PARAM_DEPTH	100	/* parameter stack depth */
 #define MAX_MODULE_ARGS	1024	/* maximum length of tcc-module arguments */
--- tcng-10b.orig/tcc/device.c
+++ tcng-10b/tcc/device.c
@@ -77,6 +77,8 @@
 	if (remove_qdiscs) {
 	    tc_more("tc qdisc del dev %s root",device->name);
 	    tc_nl();
+	    tc_more("tc qdisc del dev %s ingress",device->name);
+	    tc_nl();
 	}
 	if (!device->egress && !device->ingress) continue;
 	tc_comment('=',"Device %s",device->name);
--- tcng-10b.orig/tcc/f_fw.c
+++ tcng-10b/tcc/f_fw.c
@@ -6,11 +6,10 @@
  * Copyright 2002 by Werner Almesberger
  */
 
-
+#include "util.h"
 #include <stddef.h>
 #include <linux/if_ether.h>
 
-#include "util.h"
 #include "error.h"
 #include "param.h"
 #include "tree.h"
@@ -45,9 +44,6 @@
 {
     ELEMENT *element;
 
-    tc_pragma(filter->params);
-    tc_filter_add(filter,ETH_P_ALL);
-    tc_nl();
     for (element = filter->elements; element; element = element->next) {
 	tc_pragma(element->params);
 	tc_element_add(element,ETH_P_ALL);
--- tcng-10b.orig/tcc/if_c.c
+++ tcng-10b/tcc/if_c.c
@@ -302,7 +302,7 @@
     }
     tcng_topdir = getenv("TCNG_TOPDIR");
     cmd = alloc_sprintf("%s/" TCNG_BIN_DIR "/" TCC_MODULE_CMD "%s cls %s %s",
-      tcng_topdir ? tcng_topdir : TOPDIR,tcc_module_args,file_name,name);
+      tcng_topdir ? tcng_topdir : DATA_DIR,tcc_module_args,file_name,name);
     fflush(stdout);
     fflush(stderr);
     if (system(cmd)) errorf("system(%s) failed",cmd);
--- tcng-10b.orig/tcc/ext_io.c
+++ tcng-10b/tcc/ext_io.c
@@ -144,7 +144,7 @@
 	char *new_path;
 
 	tcng_topdir = getenv("TCNG_TOPDIR");
-	if (!tcng_topdir) tcng_topdir = TOPDIR;
+	if (!tcng_topdir) tcng_topdir = DATA_DIR;
 	new_path = alloc(strlen(path)+strlen(tcng_topdir)+strlen(TCNG_BIN_DIR)+
 	  3);
 	sprintf(new_path,"%s:%s/%s",path,tcng_topdir,TCNG_BIN_DIR);
--- tcng-10b.orig/tcc/ext/tccext.c
+++ tcng-10b/tcc/ext/tccext.c
@@ -62,7 +62,7 @@
 /* ----- Location support -------------------------------------------------- */
 
 
-static int log10(int value)
+static int log10i(int value)
 {
     int len;
 
@@ -96,7 +96,7 @@
 		    len += strlen(va_arg(ap,char *))-2;
 		    break;
 		case 'd':
-		    len += log10(va_arg(ap,int))-2;
+		    len += log10i(va_arg(ap,int))-2;
 		    break;
 		case '%':
 		    len--;
--- tcng-10b.orig/tcsim/Makefile.unclean
+++ tcng-10b/tcsim/Makefile.unclean
@@ -18,6 +18,7 @@
 CFLAGS_USER=$(CFLAGS_WARN) -I../shared -I. \
   -DVERSION=\"`cat ../VERSION`\" \
   $(shell sed '/TOPDIR=\(.*\)/s//-DTOPDIR=\\\"\1\\\"/p;d' <../config) \
+  $(shell sed '/DATA_DIR=\(.*\)/s//-DDATA_DIR=\\\"\1\\\"/p;d' <../config) \
   $(shell sed '/DOLLAR=true/s//-DDOLLAR/p;d' <../config) \
   $(shell sed '/TCC=\(.*\)/s//-DTCC_CMD=\\\"\1\\\"/p;d' <../config) \
   $(shell sed '/KFULLVERSION=\(.*\)/s//-DKFULLVERSION=\\\"\1\\\"/p;d' \
--- tcng-10b.orig/tcsim/tcsim.c
+++ tcng-10b/tcsim/tcsim.c
@@ -310,7 +310,7 @@
 #endif
     tcng_topdir = getenv("TCNG_TOPDIR");
     include = alloc_sprintf("%s/lib/tcng/include",
-      tcng_topdir ? tcng_topdir : TOPDIR);
+      tcng_topdir ? tcng_topdir : DATA_DIR);
     if (tcng_topdir) tcc_cmd = alloc_sprintf("%s/bin/tcng",tcng_topdir);
     cpp_argv[cpp_argc++] = alloc_sprintf("-I%s",include); /* @@@ leak */
     while ((c = getopt(argc,argv,"cdgjhk:npqs:vD:U:I:VX:")) != EOF)
--- tcng-10b.orig/scripts/symlinks.sh
+++ tcng-10b/scripts/symlinks.sh
@@ -1,4 +1,4 @@
-#!/bin/sh -e
+#!/bin/bash -e
 #
 # symlinks.sh - Generate convenience symbolic links
 #
--- tcng-10b.orig/scripts/localize.sh
+++ tcng-10b/scripts/localize.sh
@@ -13,7 +13,8 @@
     exit 1
 fi
 
-[ -z "$TCNG_INSTALL_CWD" ] && TCNG_INSTALL_CWD=`pwd`
+TCNG_INSTALL_CWD=/usr/lib/tcng
+DESTDIR=$1
 
 wrap()
 {
@@ -23,12 +24,8 @@
 	fi
 	[ ! -x ${2:-$1} ] || mv ${2:-$1} ${2:-$1}.bin
     fi
-    echo Creating wrapper for $1
-    cat <<EOF >$1
-#!/bin/sh
-TCNG_TOPDIR=$TCNG_INSTALL_CWD exec $TCNG_INSTALL_CWD/${2:-$1}.bin "\$@"
-EOF
-    chmod 755 $1
+    echo Creating link for $1
+    ln -s $TCNG_INSTALL_CWD/${2:-$1} $1
 }
 
 
@@ -36,7 +33,7 @@
 {
     [ -f $1 -a -x $1 ] || return 0
     perl -pi -e \
-     '$pwd = "'$TCNG_INSTALL_CWD'"; s/topdir=[^\$].*/topdir=$pwd/;' $1
+     'BEGIN { $pwd = "'$TCNG_INSTALL_CWD'" } s/topdir=[^\$].*/topdir=$pwd/;' $1
 }
 
 
--- tcng-10b.orig/debian/control
+++ tcng-10b/debian/control
@@ -0,0 +1,19 @@
+Source: tcng
+Section: net
+Priority: extra
+Maintainer: Adam Borowski <kilobyte@angband.pl>
+Build-Depends: debhelper (>= 5.0.0), bison, flex, transfig, texlive-latex-base
+Standards-Version: 3.8.1
+Vcs-Svn: http://angband.pl/svn/deb/tcng/trunk/
+Vcs-Browser: http://angband.pl/viewvc/deb/tcng/trunk/
+
+Package: tcng
+Architecture: any
+Depends: ${shlibs:Depends}, iproute, cpp
+Description: Linux traffic control language interpreter
+ Using /sbin/tc (to configure Linux network traffic flow control) is
+ painful. This package attempts to reduce the pain with two new input
+ languages (one for humans, and XML ;-). The output is XML, or /sbin/tc
+ commands to configure the kernel.
+ .
+ The "tcsim" traffic simulator is not included in Debian.
--- tcng-10b.orig/debian/copyright
+++ tcng-10b/debian/copyright
@@ -0,0 +1,25 @@
+This is tcng, written by Werner Almesberger <wa@almesberger.net>.
+It has been packaged for Debian by Matthias Urlichs <smurf@debian.org>
+on Fri, 26 Mar 2004 21:16:32 +0100.
+
+The original source can be found at: http://tcng.sourceforge.net/
+
+From the README:
+
+  Copyright 2001 EPFL-ICA, Werner Almesberger
+  Copyright 2001,2002 Bivio Networks, Network Robots, Werner Almesberger
+  Copyright 2003,2004 Werner Almesberger
+  
+  This package is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  See the file COPYING.GPL for details.
+
+  The files tcc/ext/tccext.h, tcc/ext/tccext.c, tcc/ext/echoh.h, and
+  tcc/ext/echoh.c are distributed under the GNU Lesser General Public
+  License. See the file COPYING.LGPL for details.
+
+On Debian systems, the complete text of the licenses can be found in
+`/usr/share/common-licenses/GPL' and  `/usr/share/common-licenses/LGPL'.
--- tcng-10b.orig/debian/dirs
+++ tcng-10b/debian/dirs
@@ -0,0 +1,2 @@
+/usr/lib/tcng/bin
+usr/bin
--- tcng-10b.orig/debian/watch
+++ tcng-10b/debian/watch
@@ -0,0 +1,2 @@
+version=3
+http://tcng.sourceforge.net/ dist/tcng-([a-z0-9\.]+).tar.gz
--- tcng-10b.orig/debian/rules
+++ tcng-10b/debian/rules
@@ -0,0 +1,96 @@
+#!/usr/bin/make -f
+# -*- makefile -*-
+# Sample debian/rules that uses debhelper.
+# GNU copyright 1997 to 1999 by Joey Hess.
+# Matthias Urlichs (2004) and Adam Borowski (2006) have been here, too.
+
+# Uncomment this to turn on verbose mode.
+#export DH_VERBOSE=1
+
+P=$(shell pwd)/debian/tmp
+
+CFLAGS = -Wall -g
+
+ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
+	CFLAGS += -O0
+else
+	CFLAGS += -O2
+endif
+ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
+	INSTALL_PROGRAM += -s
+endif
+
+configure: configure-stamp
+configure-stamp: 
+	dh_testdir
+	# Add here commands to configure the package.
+
+	./configure --no-tcsim --c99 -d /usr -D /usr/lib/tcng
+	touch configure-stamp
+
+
+build: build-stamp
+
+build-stamp: configure-stamp 
+	dh_testdir
+
+	# Add here commands to compile the package.
+	$(MAKE) DESTDIR=$P
+	#/usr/bin/docbook-to-man debian/tcng.sgml > tcng.1
+
+	touch build-stamp
+
+clean:
+	dh_testdir
+	dh_testroot
+	rm -f build-stamp configure-stamp 
+
+	# Add here commands to clean up after the build process.
+	-$(MAKE) DESTDIR=$P spotless
+
+	# These files are supplied by upstream, but we recreate them
+	-rm -f doc/*.eps
+
+	dh_clean 
+
+install: build
+	dh_testdir
+	dh_testroot
+	dh_clean -k 
+	dh_installdirs
+
+	# Add here commands to install the package into debian/tcng.
+	$(MAKE) install DESTDIR=$(CURDIR)/debian/tcng
+
+	# This doesn't belong in /usr/bin
+	mv debian/tcng/usr/bin/tcc_var2fix.pl debian/tcng/usr/lib/tcng/bin/
+	mv debian/tcng/usr/bin/tcc.bin debian/tcng/usr/lib/tcng/bin/tcc
+
+	# This neither
+	rm debian/tcng/usr/bin/tcc
+
+# Build architecture-independent files here.
+binary-indep: build install
+# We have nothing to do by default.
+
+# Build architecture-dependent files here.
+binary-arch: build install
+	dh_testdir
+	dh_testroot
+	dh_installchangelogs CHANGES
+	dh_installdocs CHANGES README TODO doc/tcng.dvi doc/tcng.ps doc/tcng.txt
+	dh_install -X RCS -X SCCS examples/* /usr/share/doc/tcng/examples/tcsim
+	dh_install -X RCS -X SCCS examples-ng/* /usr/share/doc/tcng/examples/tcng
+	dh_installman debian/tcng.8
+	dh_link
+	dh_strip
+	dh_compress
+	dh_fixperms
+	dh_installdeb
+	dh_shlibdeps
+	dh_gencontrol
+	dh_md5sums
+	dh_builddeb
+
+binary: binary-indep binary-arch
+.PHONY: build clean binary-indep binary-arch binary install configure
--- tcng-10b.orig/debian/tcng.8
+++ tcng-10b/debian/tcng.8
@@ -0,0 +1,201 @@
+.TH tcng 1 2007-11-15 Debian TCNG
+.SH NAME
+tcng \- Traffic control compiler
+.SH SYNOPSIS
+.B tcng
+[
+.B -c
+] [
+.BI -d " ..."
+] [
+.B -E
+] [
+.BI -i " <default_interface>"
+] [
+.BI -l " <location_file>"
+] [
+.B -n
+] [
+.B -q
+] [
+.B -r
+] [
+.B -w
+] [
+.BI -W " [no]<condition>"
+] [
+.BI -O " [no]<option>"
+] [
+.BI -x " <element>:<ext_target> ..."
+] [
+.BI -t " [no]<target> ..."
+] [
+.BI -u " <var_use_file>"
+] [
+.BI -X " <phase>,<argument>"
+] [
+.I <cpp_option>
+] [
+.I <file>
+]
+.SH DESCRIPTION
+The
+.B tcng
+language is extensively described in several formats, you can find
+these files in 
+.IR "/usr/share/doc/tcng" "."
+This manpage describes nothing but command-line arguments.
+.P
+.B tcng
+reads traffic control specifications in the tcng language and 
+generates command or files for a number of mechanisms that are used to 
+implement traffic control functionality.
+.TP
+.BI -c
+only check validity of input, don't build a configuration. If 
+requested, the location file and the variable use file are also 
+generated when using -c 
+.TP
+.BI -d
+increase debugging level
+.TP
+.BI -E
+only run cpp, and send its output to standard output. This is useful 
+for separately running files through cpp, while using the default 
+includes added by tcng. 
+.TP
+.BI -i " <default_interface>"
+interface to use if none is specified in the 
+description file. See section \*(lqInterfaces revisited\*(rq for further 
+details. 
+.TP
+.BI -l " <location_file>"
+write a list of source code locations of traffic 
+control elements to the specified file. See section \*(lqLocation map\*(rq for 
+details. Using the special file name \*(lqstderr\*(rq sends the output to 
+standard error. 
+.TP
+.BI -n
+do not include \*(lqdefault.tc\*(rq. By default, tcng includes this file, 
+which in turn includes the files described in section \*(lqInclude files\*(rq. 
+This can be undesirable, e.g. if operating in a non-TCP/IP context, or 
+if using a different default include file with application-specific 
+definitions. In the latter case, the following options should be used:
+tcng ... -n ... -Xp,--include -Xp,/<directory>/<file> ... 
+.TP
+.BI -O "[no]<option>"
+enable or disable the specified optimization. The 
+following optimizations are recognized: 
+.RS
+.I \*(lqcse\*(rq
+common subexpression elimination 
+.br
+.I \*(lqne\*(rq
+turn != into multiple ==s 
+.br
+.I \*(lqprefix\*(rq
+generate prefix matches instead of bit tests 
+.RE
+By default, all optimizations except \*(lqcse\*(rq are turned off. 
+.TP
+.BI -q
+quiet, produce terse output 
+.TP
+.BI -r
+remove old queuing disciplines before adding new ones ("tc" only) 
+.TP
+.BI -t " [<elem:>][no]<target> ..."
+enable or disable target (see section 
+\*(lqTargets\*(rq). The only element currently supported is \*(lqif\*(rq. Supported 
+targets are \*(lqall\*(rq, \*(lqtc\*(rq (default), \*(lqc\*(rq, and \*(lqext\*(rq. The -t options can 
+be repeated to enable or disable multiple targets. 
+.TP
+.BI -u "<var_use_file>"
+for each variable, write its name and value to the 
+specified file. See section \*(lqVariable use list\*(rq for details. Using the 
+special file name \*(lqstderr\*(rq sends the output to standard error. 
+.TP
+.BI -V
+print version number and exit 
+.TP
+.BI -w
+suppress all warnings 
+.TP
+.BI -W "[no]<condition>"
+enable or disable issuing a warning message on the 
+specified condition. The following conditions are recognized: 
+.RS
+.I \*(lqconstpfx\*(rq
+warn if using the / (mask) operator on a constant IPv4 or 
+IPv6 address, as in ip_src == 1.2.3.0/24, which should probably be 
+ip_src/24 == 1.2.3.0 
+.br
+.I \*(lqexpensive\*(rq
+generate warnings when encountering \*(lqexpensive\*(rq 
+constructs in \*(lqif\*(rq classifier. A construct is considered 
+\*(lqexpensive\*(rq if processing it may take tcng an unusual amount of 
+time. Operations like negation, certain tests for non-equality, or 
+static classification that follows metering, are \*(lqexpensive\*(rq.
+.br
+Because \*(lqexpensive\*(rq may be overly pessimistic, \*(lqexppostopt\*(rq should 
+be used whenever possible. 
+.br
+.I \*(lqexperror\*(rq
+turns warnings from \*(lqexpensive\*(rq or \*(lqexppostopt\*(rq into 
+fatal errors. Setting \*(lqexperror\*(rq without also setting \*(lqexpensive\*(rq 
+or \*(lqexppostopt\*(rq has no effect. 
+.br
+.I \*(lqexplicit\*(rq
+warn if a class if explicitly specified for the inner 
+queuing discipline of \*(lqdsmark\*(rq, \*(lqegress\*(rq, or \*(lqingress\*(rq 
+.br
+.I \*(lqexppostopt\*(rq
+like \*(lqexpensive\*(rq, but test for \*(lqexpensive\*(rq constructs 
+after trying to optimize the expression, which may eliminate some 
+apparently expensive constructs. \*(lqexppostopt\*(rq can only indicate in 
+which \*(lqif\*(rq classifier the expression occurred, not in which 
+selector of that classifier. \*(lqexpensive\*(rq has no effect if 
+\*(lqexppostopt\*(rq is set.
+.br
+Note that neither \*(lqexpensive\*(rq nor \*(lqexppostopt\*(rq are useful when 
+using \*(lqnocombine\*(rq (see sectionbarriers). 
+.br
+.I \*(lqredefine\*(rq
+warn if re-defining variables 
+.br
+.I \*(lqtruncate\*(rq
+warn if truncating values, e.g. when converting a 
+floating-point number to an integer 
+.br
+.I \*(lqunused\*(rq
+report unused variables 
+.br
+    By default, all warnings except "explicit" and "unused" are turned off. 
+.RE
+.TP
+.BI -x " <element>:<ext_target> ..."
+register external target (see section 
+\*(lqTargets\*(rq). The -x option can be repeated to register multiple external 
+targets. 
+.TP
+.BI -X "<phase>,<argument>"
+verbatim argument for specific build phase. See 
+section \*(lqPhases underneath tcng\*(rq for details. 
+.TP
+.I "<cpp_option>"
+one of the following options for the C pre-processor: 
+.BI -I "<dir>"
+,
+.BI -D "<name>[=<value>]"
+, or 
+.BI -U "<name> "
+.P
+.B tcng
+also recognizes a number of undocumented options, such as 
+.B -B
+and
+.B -N. 
+These options usually enable experimental features, like alternative 
+algorithms for processing \*(lqif\*(rq expressions, and they are not recommended 
+for normal use of tcng. Changes to undocumented options are mentioned in 
+tcng's change log (file /usr/share/doc/tcng/CHANGES).
--- tcng-10b.orig/debian/README
+++ tcng-10b/debian/README
@@ -0,0 +1,7 @@
+The Debian Package tcng
+-----------------------
+
+Upstream also has a traffic control simulator (tcsim). At the moment
+this program is not packaged.
+
+Matthias Urlichs <smurf@debian.org>, Fri, 26 Mar 2004 21:16:32 +0100
--- tcng-10b.orig/debian/NEWS
+++ tcng-10b/debian/NEWS
@@ -0,0 +1,7 @@
+tcng (10b-1) unstable; urgency=low
+
+  The tcng compiler, "tcc", has been renamed to "tcng".  Because of a conflict
+  with the "tcc" package, no compatibility symlink is provided.  You are free
+  to create one, but this is a bad idea if you'll ever want to install "tcc".  
+
+ -- Adam Borowski <kilobyte@angband.pl>  Tue, 20 Jun 2006 14:09:54 +0200
--- tcng-10b.orig/debian/tcng.doc-base
+++ tcng-10b/debian/tcng.doc-base
@@ -0,0 +1,25 @@
+Document: tcng
+Title: Traffic Control - Next Generation: Reference Manual
+Author: Werner Almesberger
+Abstract: This document describes the "next generation" system for configuring
+ traffic control on the Linux platform. We give a general overview of
+ the system in this chapter, continue with a definition of the tcng
+ configuration language in chapter "The tcng language", with additional
+ background information in chapters "Under the hood" and "Historical
+ constructs", describe the traffic control compiler tcc and the
+ simulation framework tcsim in chapters "Traffic control compiler" and
+ "Traffic control simulator", respectively, and conclude with a
+ description of the interface tcc uses to communicate with external
+ programs (for specialized traffic control mechanisms) in chapter "The
+ external interface".
+Section: System/Administration
+
+Format: dvi
+Files: /usr/share/doc/tcng/tcng.dvi.gz
+
+Format: postscript
+Files: /usr/share/doc/tcng/tcng.ps.gz
+
+Format: text
+Files: /usr/share/doc/tcng/tcng.txt.gz
+
--- tcng-10b.orig/debian/changelog
+++ tcng-10b/debian/changelog
@@ -0,0 +1,84 @@
+tcng (10b-3) unstable; urgency=low
+
+  * Patch to make tcng.y compile with the new, more picky, version of bison
+    (Closes: #527530).
+
+ -- Adam Borowski <kilobyte@angband.pl>  Fri, 08 May 2009 15:34:08 +0200
+
+tcng (10b-2) unstable; urgency=low
+
+  * TeX transition: build-depend on texlive-latex-base instead of tetex-*,
+    this cuts down half a gig of dependencies (Closes: #450739).
+  * Non-stub manpage for tcng(8).
+  * Mention in the package description that the "tcsim" half of package is
+    not provided in Debian (and never was).  It would be nice to have it,
+    but porting it to modern kernels is non-trivial.
+  * Reorder #includes to make new glibc on amd64 happy (Closes: #451463).
+  * Add Vcs-Svn and Vcs-Browser.
+  * Properly clean ingress on -r (Closes: #451002).
+  * Configure differently for in-place use and for packaged installs instead
+    of using wrapper hacks (Closes: #439444).
+  * Add a watch file.
+  * doc-base section: net -> System/Administration.
+
+ -- Adam Borowski <kilobyte@angband.pl>  Wed, 05 Mar 2008 13:53:41 +0100
+
+tcng (10b-1) unstable; urgency=low
+
+  * New maintainer.
+  * New upstream release (closes: #290559).
+    - This does rename the main binary from "tcc" to "tcng"!  I'm not providing
+      a compatibility symlink, as the old name conflicted with Policy 10.1.
+    - Use "conform-exceed" instead of "action" (closes: #323301).
+  * Make configure use /bin/bash, it's crawling with bashisms.
+  * examples/examples -> examples (closes: #290558).
+  * Install all examples provided by the upstream (closes: #259571).
+  * Install the upstream changelog as changelog.gz.
+  * Suppress useless fw filters, thanks Henrique de Moraes Holschuh
+    (closes: #259949).
+
+ -- Adam Borowski <kilobyte@angband.pl>  Mon, 19 Jun 2006 23:47:30 +0200
+
+tcng (9m-1) unstable; urgency=low
+
+  * New Upstream version.
+    - Closes: #259107
+
+ -- Matthias Urlichs <smurf@debian.org>  Tue, 13 Jul 2004 09:27:47 +0200
+
+tcng (9l-5) unstable; urgency=medium
+
+  * Move manpage to section 8.
+    - Closes: #249582 (this time for sure)
+  * Don't install example SCCS files.  :-/
+
+ -- Matthias Urlichs <smurf@debian.org>  Wed,  7 Jul 2004 08:41:26 +0200
+
+tcng (9l-4) unstable; urgency=medium
+
+  * Move tcc to /usr/sbin; it's useable mostly by root and tcc in /usr/bin
+    conflicts with package "tcc".
+    - Closes: #249582
+
+ -- Matthias Urlichs <smurf@debian.org>  Tue, 18 May 2004 13:16:28 +0200
+
+tcng (9l-3) unstable; urgency=low
+
+  * Reworked pah resolution
+
+ -- Matthias Urlichs <smurf@debian.org>  Sat,  1 May 2004 15:37:25 +0200
+
+tcng (9l-2) unstable; urgency=low
+
+  * Depend on cpp.
+  * Set the base directory correctly.
+
+ -- Matthias Urlichs <smurf@debian.org>  Sat,  1 May 2004 13:06:42 +0200
+
+tcng (9l-1) unstable; urgency=low
+
+  * Initial Release.
+    - Closes: #240321
+
+ -- Matthias Urlichs <smurf@debian.org>  Fri, 26 Mar 2004 21:16:32 +0100
+
--- tcng-10b.orig/debian/compat
+++ tcng-10b/debian/compat
@@ -0,0 +1 @@
+5
